@model Projeto.Restaurante.MVC.ViewModels.Pedido.ViewModelEditPedido
@{
    ViewBag.Title = "Alterar";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary">
        <div class="panel-heading">
            Cadastrar
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">
                    @Html.DisplayNameFor(model => model.Id)
                </label>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ativo, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        @Html.EditorFor(model => model.Ativo)
                        @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mesas, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        @{
    var mesas = Model.Mesas.Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Nome }).ToList();
                        }
                        @Html.DropDownList("MesaId", mesas, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MesaId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">
                    Itens
                </div>
                <div class="panel-body">

                    <div class="form-group">
                        <label class="control-label col-md-1">
                            Pratos
                        </label>
                        <div class="col-md-11">
                            <select id="comboPrato" class="form-control">
                                <option value="0">Selecione</option>
                                @{
    foreach (var categoria in Model.Categorias)
    {
        <optgroup label="@categoria.Nome">
            @{
        foreach (var prato in categoria.Pratos)
        {
            <option value="@prato.Id">@prato.Nome R$ [@prato.Preco]</option>
        }
            }
        </optgroup>
    }
                                }
                            </select>
                        </div>
                    </div>

                    @{
    foreach (var opcao in Model.Opcoes)
    {
        <div class="form-group">
            <label for="@opcao.Id" class="col-md-1">
                <input value="@opcao.Id" type="checkbox" class="checkbox" />
            </label>
            <label class="control-label col-md-11">
                @Html.DisplayFor(model => opcao.Nome)
            </label>
        </div>
    }
                    }

                    <div id="form-group">
                        <div class="col-md-offset-5 col-md-2">
                            <input id="btnAssociarItem" type="button" value="Associar Item" class="btn btn-info btn-block" />
                        </div>
                    </div>

                </div>

            </div>

            <div class="form-group">
                <div class="col-md-offset-5 col-md-2">
                    <input type="submit" value="Alterar" class="btn btn-info btn-block" />
                </div>
            </div>
        </div>
    </div>
}

<div class="form-group">
    <div class="col-md-2">
        @Html.ActionLink("Listar", "Index", null, null, new { @class = "btn btn-info btn-block" })
    </div>
</div>

@{ Html.RenderPartial("~/Views/Util/Alert.cshtml");}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function Validacao() {
            if ($("#comboPrato option").length === 0 || $("#comboPrato").val() === "0") {
                alert("Prato - Obrigatório");
                return false;
            }
            return true;
        }

        function ViewModelPostOpcao(id) {
            this.Id = id;
        }

        function ViewModelPostItem(pedidoId, pratoId, opcoes) {
            this.PedidoId = pedidoId;
            this.PratoId = pratoId;
            this.Opcoes = opcoes;
        }

        function AssociarItem() {
            if (Validacao()) {

                var viewModelPostOpcao = new Array();
                $(".checkbox:checked").each(function() {
                    viewModelPostOpcao.push($(this).val());
                });

                var viewModelPostItem = new ViewModelPostItem(@Model.Id, $("#comboPrato").val());

                $.ajax({
                    type: "POST",
                    url: "/Api/V1/Itens",
                    data: JSON.stringify(viewModelPostItem),
                    dataType: "json",
                    contentType: "application/json;charset=utf-8",
                    success: function (data) {
                        alert("Sucesso!");

                    },
                    error: function (jqXhr) {
                        var e = eval("(" + jqXhr.responseText + ")");
                        alert(e.Message);
                    }
                });
            }
        }

        $(document).ready(function () {
            $("#btnAssociarItem").click(function () {
                AssociarItem();
            });
        });
    </script>
}